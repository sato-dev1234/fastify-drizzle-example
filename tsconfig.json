{
  "compilerOptions": {
    /* Projects */
    "incremental": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
    "target": "es2020",                               /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": ["es2020"],
    "moduleResolution": "node",
    "experimentalDecorators": true,                   /* Enable experimental support for legacy experimental decorators. */
    "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */
    "resolveJsonModule": true,                        /* Enable importing .json files. */
    /* Modules */
    "module": "commonjs",                             /* Specify what module code is generated. */
    "baseUrl": ".",                                   /* Specify the base directory to resolve non-relative module names. */
    "paths": {
      "@/*": ["src/*"],
      "~/*": ["test/*"],
    },                                                /* Specify a set of entries that re-map imports to additional lookup locations. */
    "rootDirs": ["./src", "./test"],                  /* Allow multiple folders to be treated as one when resolving modules. */
    "typeRoots": [
      "src/@types",
      "node_modules/@types",
    ],                                                /* Specify multiple folders that act like './node_modules/@types'. */
    /* Emit */
    "declaration": true,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
    "outDir": "./dist",
    "removeComments": true,                           /* Disable emitting comments. */
    /* Interop Constraints */
    "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                          /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,         /* Ensure that casing is correct in imports. */
    /* Type Checking */
    "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */
    "strictBindCallApply": true,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
    "skipLibCheck": true,                             /* Skip type checking all .d.ts files. */
    "plugins": [
      // Transform paths in output .js files
      { "transform": "typescript-transform-paths" },
      // Transform paths in output .d.ts files (Include this line if you output declarations files)
      { "transform": "typescript-transform-paths", "afterDeclarations": true }
    ],
    "types":  [
      "jest"
    ],                                                /* Specify type package names to be included without being referenced in a source file. */
  },
  "include": ["src/@type/fastify.ts", "src/**/*.ts", "test/**/*"],
  "exclude": ["src/node_modules", "src/dist"]
}
